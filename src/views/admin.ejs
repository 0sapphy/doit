<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/public/css/output.css">
  <title>Admin Panel</title>
</head>
<body class="bg-gradient-to-b from-gray-700 via-gray-800 to-gray-900 min-h-screen flex flex-col">
  <%- include("Partials/Navbar") %>

  <div class="flex-grow bg-gradient-to-b from-gray-700 via-gray-800 to-gray-900">
    <div class="max-w-4xl mx-auto py-10">
      <h1 class="text-3xl font-bold text-white mb-6">Admin Panel</h1>

      <!-- Stats Section -->
      <div class="grid grid-cols-1 sm:grid-cols-3 gap-6 mb-10">
        <div class="bg-gray-800 p-6 rounded-lg shadow-md text-center">
          <h2 class="text-lg font-semibold text-gray-300">Total Users</h2>
          <p id="total-users" class="text-2xl font-bold text-white mt-2">0</p>
        </div>
        <div class="bg-gray-800 p-6 rounded-lg shadow-md text-center">
          <h2 class="text-lg font-semibold text-gray-300">Total Todos</h2>
          <p id="total-todos" class="text-2xl font-bold text-white mt-2">0</p>
        </div>
        <div class="bg-gray-800 p-6 rounded-lg shadow-md text-center">
          <h2 class="text-lg font-semibold text-gray-300">Total Notifications</h2>
          <p id="total-notifications" class="text-2xl font-bold text-white mt-2">0</p>
        </div>
      </div>

      <form id="notification-form" class="bg-gray-800 shadow-md rounded-lg p-6">
        <h2 class="text-lg font-semibold text-gray-300 mb-4">Push a New Notification</h2>
        <div class="mb-4">
          <label for="notification-message" class="block text-sm font-medium text-gray-300">Notification Message</label>
          <textarea id="notification-message" rows="3" class="mt-1 block w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-700 text-white placeholder-gray-400"></textarea>
        </div>
        <button type="submit" class="px-6 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700">Push Notification</button>
      </form>
      <div id="notification-result" class="mt-4 text-sm text-gray-300 hidden"></div>

      <div class="mt-10 bg-gray-800 shadow-md rounded-lg p-6">
        <h2 class="text-lg font-semibold text-gray-300 mb-4">Existing Notifications</h2>
        <ul id="notifications-list" class="space-y-4">
          <!-- Notifications will be dynamically populated here -->
        </ul>
      </div>
    </div>
  </div>

  <footer class="bg-gray-800 text-gray-300 py-4">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col sm:flex-row justify-between items-center">
      <div class="text-sm">
        <p>Version 1.0.0</p>
      </div>
      <div class="mt-2 sm:mt-0">
        <a href="https://github.com/0sapphy/doit" target="_blank" class="text-blue-400 hover:text-blue-500 text-sm">
          GitHub
        </a>
      </div>
      <div class="mt-2 sm:mt-0 text-sm">
        <p>&copy; <%= new Date().getFullYear() %> DOIT. All rights reserved.</p>
      </div>
    </div>
  </footer>

  <script>
    const notificationForm = document.getElementById("notification-form");
    const notificationsList = document.getElementById("notifications-list");
    const notificationResult = document.getElementById("notification-result");

    async function fetchStats() {
      try {
        const response = await fetch("/api/stats");
        if (response.ok) {
          const stats = await response.json();
          document.getElementById("total-users").textContent = stats.totalUsers || 0;
          document.getElementById("total-todos").textContent = stats.totalTodos || 0;
          document.getElementById("total-notifications").textContent = stats.totalNotifications || 0;
        } else {
          console.error("Failed to fetch stats.");
        }
      } catch (err) {
        console.error("Error fetching stats:", err);
      }
    }

    async function fetchNotifications() {
      try {
        const response = await fetch("/api/notifications");
        if (response.ok) {
          const notifications = await response.json();
          notificationsList.innerHTML = notifications
            .map(
              (notification) => `
                <li class="flex justify-between items-center bg-gray-700 p-4 rounded-md shadow-sm">
                  <span class="text-white">${notification.message}</span>
                  <button class="delete-notification-btn px-3 py-1 bg-red-600 text-white text-sm font-medium rounded-md hover:bg-red-700" data-id="${notification.id}">
                    Delete
                  </button>
                </li>
              `
            )
            .join("");
        } else {
          console.error("Failed to fetch notifications.");
        }
      } catch (err) {
        console.error("Error fetching notifications:", err);
      }
    }

    notificationForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      const message = document.getElementById("notification-message").value.trim();

      if (!message) {
        alert("Notification message is required.");
        return;
      }

      try {
        const response = await fetch("/api/notifications", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ message }),
        });

        if (response.ok) {
          const result = await response.json();
          notificationResult.textContent = "Notification pushed successfully!";
          notificationResult.classList.remove("hidden");
          document.getElementById("notification-message").value = "";
          fetchStats(); // Update stats dynamically
          fetchNotifications(); // Update notifications dynamically
        } else {
          alert("Failed to push notification.");
        }
      } catch (err) {
        console.error("Error pushing notification:", err);
        alert("An error occurred while pushing the notification.");
      }
    });

    notificationsList.addEventListener("click", async (event) => {
      if (event.target.classList.contains("delete-notification-btn")) {
        const notificationId = event.target.dataset.id;

        try {
          const response = await fetch(`/api/notifications/${notificationId}`, {
            method: "DELETE",
          });

          if (response.ok) {
            event.target.closest("li").remove();
            fetchStats(); // Update stats dynamically
          } else {
            alert("Failed to delete notification.");
          }
        } catch (err) {
          console.error("Error deleting notification:", err);
          alert("An error occurred while deleting the notification.");
        }
      }
    });

    fetchStats();
    fetchNotifications();

    // WebSocket or Server-Sent Events (SSE) for real-time updates
    const eventSource = new EventSource("/api/updates");
    eventSource.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.type === "stats") {
        fetchStats(); // Update stats dynamically when a "stats" update is received
      } else if (data.type === "notifications") {
        fetchNotifications(); // Update notifications dynamically when a "notifications" update is received
      }
    };
  </script>
</body>
</html>
